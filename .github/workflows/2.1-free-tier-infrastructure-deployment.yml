name: 2.1-free-tier-infrastructure-deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to (qa/prod)'
        required: true
        default: 'qa'
        type: choice
        options:
          - qa
          - prod

jobs:
  deploy-free-tier-infrastructure:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.7.0

    - name: Terraform Init
      run: |
        cd terraform
        terraform init \
          -backend-config="resource_group_name=rg-${{ inputs.environment }}-tfstate" \
          -backend-config="storage_account_name=tfstate${{ inputs.environment }}1367" \
          -backend-config="container_name=tfstate" \
          -backend-config="key=main-terraform.tfstate"

    - name: Terraform Validate
      run: |
        cd terraform
        terraform validate

    - name: Terraform Plan
      run: |
        cd terraform
        terraform plan \
          -var="environment=${{ inputs.environment }}" \
          -var="resource_group_name=rg-${{ inputs.environment }}-movie-analyst" \
          -var="mysql_server_name=mysql-${{ inputs.environment }}-movie-analyst" \
          -var="mysql_administrator_login=mysqladmin" \
          -var="mysql_administrator_password=${{ secrets.DB_ROOT_PASSWORD }}" \
          -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" \
          -out=tfplan

    - name: Terraform Apply
      run: |
        cd terraform
        terraform apply tfplan

    - name: Output Deployment Information
      run: |
        cd terraform
        echo "## Infrastructure Deployment Complete" >> $GITHUB_STEP_SUMMARY
        echo "Environment: **${{ inputs.environment }}**" >> $GITHUB_STEP_SUMMARY
        echo "Resource Group: **rg-${{ inputs.environment }}-movie-analyst**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Network Resources:" >> $GITHUB_STEP_SUMMARY
        echo "- Virtual Network created" >> $GITHUB_STEP_SUMMARY
        echo "- Public and Private subnets created" >> $GITHUB_STEP_SUMMARY
        echo "- Azure Bastion configured for secure access" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Compute Resources:" >> $GITHUB_STEP_SUMMARY
        echo "- Backend VM deployed" >> $GITHUB_STEP_SUMMARY
        echo "- Frontend VM Scale Set deployed" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Database Resources:" >> $GITHUB_STEP_SUMMARY
        echo "- MySQL Single Server deployed (Free Tier Compatible)" >> $GITHUB_STEP_SUMMARY
        echo "- Database 'moviedb' created" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Load Balancer Resources:" >> $GITHUB_STEP_SUMMARY
        echo "- Application Gateway configured" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Note**: This deployment uses Azure Free Tier compatible resources including MySQL Single Server instead of MySQL Flexible Server."