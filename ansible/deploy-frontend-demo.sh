#!/bin/bash

# Script to Deploy Frontend Demo Application with Ansible
# Automatically updates inventory with VM IP and runs Ansible playbook

echo "=== Deploying Frontend Demo Application with Ansible ==="
echo ""

# Check if required tools are installed
echo "🔍 Checking prerequisites..."
if ! command -v ansible &> /dev/null; then
    echo "❌ Error: Ansible is not installed"
    echo "Please install Ansible: sudo apt-get install ansible"
    exit 1
fi

if ! command -v terraform &> /dev/null; then
    echo "❌ Error: Terraform is not installed"
    echo "Please install Terraform"
    exit 1
fi

echo "✅ Prerequisites OK"
echo ""

# Get the frontend VM private IP from Terraform output
echo "📡 Getting frontend VM IP address from Terraform..."
cd /home/ouroboroz/Projects/Epam_Cloud_Project/azure-epam-project/terraform-simple

# Get the private IP of the frontend VM
FRONTEND_VM_PRIVATE_IP=$(terraform output -raw frontend_vm_private_ip 2>/dev/null)

if [ -z "$FRONTEND_VM_PRIVATE_IP" ]; then
    echo "❌ Error: Could not get frontend VM private IP from Terraform output"
    echo "Make sure you're in the correct directory and the deployment is complete"
    exit 1
fi

echo "✅ Got frontend VM private IP: $FRONTEND_VM_PRIVATE_IP"
echo ""

# Update the Ansible inventory file with the VM IP
echo "📝 Updating Ansible inventory..."
cd /home/ouroboroz/Projects/Epam_Cloud_Project/azure-epam-project/ansible

# Create updated inventory file
cat > inventory.ini << EOF
# Ansible Inventory for Frontend Demo VM
# Automatically generated by deploy-frontend-demo.sh

[frontend]
vm-frontend-demo ansible_host=$FRONTEND_VM_PRIVATE_IP ansible_user=azureuser ansible_ssh_private_key_file=~/.ssh/id_rsa

[all:vars]
ansible_python_interpreter=/usr/bin/python3
EOF

echo "✅ Inventory updated with VM IP: $FRONTEND_VM_PRIVATE_IP"
echo ""

# Test SSH connectivity to the VM
echo "🔌 Testing SSH connectivity to frontend VM..."
ssh -o BatchMode=yes -o ConnectTimeout=10 azureuser@$FRONTEND_VM_PRIVATE_IP 'echo "SSH connection successful"' 2>/dev/null
if [ $? -ne 0 ]; then
    echo "⚠️  Warning: Cannot SSH directly to VM (this is expected if using Azure Bastion only)"
    echo "Continue with Ansible deployment through Bastion..."
else
    echo "✅ Direct SSH connection successful"
fi
echo ""

# Run Ansible playbook
echo "🚀 Running Ansible playbook to deploy frontend application..."
ansible-playbook -i inventory.ini deploy-frontend-demo.yml

if [ $? -eq 0 ]; then
    echo ""
    echo "🎉 Frontend demo application deployed successfully!"
    echo ""
    echo "🔧 To access the application:"
    echo "1. Connect to the VM through Azure Bastion in the Azure Portal"
    echo "2. Access the application at: http://$FRONTEND_VM_PRIVATE_IP:3030"
    echo ""
    echo "📁 Application files are located at: /home/azureuser/movie-analyst-frontend"
    echo "🐳 Docker container name: frontend-app"
    echo ""
else
    echo ""
    echo "❌ Error: Ansible playbook failed to deploy application"
    echo "Check the error output above for details"
    exit 1
fi

echo "=== Deployment Complete ==="